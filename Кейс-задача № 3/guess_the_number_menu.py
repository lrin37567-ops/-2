import random
import json
import time
import os

STATS_FILE = "game_stats.json"

levels = {
    '1': {'name': '–õ—ë–≥–∫–∏–π', 'min': 1, 'max': 50, 'attempts': 10},
    '2': {'name': '–°—Ä–µ–¥–Ω–∏–π', 'min': 1, 'max': 100, 'attempts': 10},
    '3': {'name': '–°–ª–æ–∂–Ω—ã–π', 'min': 1, 'max': 1000, 'attempts': 15}
}

def save_stats(stats):
    try:
        with open(STATS_FILE, "a", encoding="utf-8") as f:
            json.dump(stats, f, ensure_ascii=False)
            f.write("\n")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")

def load_stats():
    if not os.path.exists(STATS_FILE):
        print("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.")
        return
    print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ—à–ª—ã—Ö –∏–≥—Ä:")
    with open(STATS_FILE, "r", encoding="utf-8") as f:
        lines = f.readlines()
        for line in lines:
            try:
                record = json.loads(line)
                status = "–£–≥–∞–¥–∞–ª" if record["—É—Å–ø–µ—Ö"] else "–ù–µ —É–≥–∞–¥–∞–ª"
                print(f"- –£—Ä–æ–≤–µ–Ω—å: {record['—É—Ä–æ–≤–µ–Ω—å']}, –†–µ–∑—É–ª—å—Ç–∞—Ç: {status}, "
                      f"–ü–æ–ø—ã—Ç–æ–∫: {record['–ø–æ–ø—ã—Ç–æ–∫']}, –í—Ä–µ–º—è: {record['–≤—Ä–µ–º—è_—Å–µ–∫']} —Å–µ–∫.")
            except json.JSONDecodeError:
                continue
    print()

def instructions():
    print("""
üìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∏–≥—Ä—ã ¬´–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ¬ª:
- –í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏.
- –ö–æ–º–ø—å—é—Ç–µ—Ä –∑–∞–≥–∞–¥–∞–µ—Ç —á–∏—Å–ª–æ –∏–∑ –¥–∏–∞–ø–∞–∑–æ–Ω–∞.
- –í–∞—à–∞ –∑–∞–¥–∞—á–∞ ‚Äî —É–≥–∞–¥–∞—Ç—å —á–∏—Å–ª–æ –∑–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫.
- –ü–æ—Å–ª–µ –∫–∞–∂–¥–æ–π –ø–æ–ø—ã—Ç–∫–∏ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –ø–æ–¥—Å–∫–∞–∑–∫—É: —á–∏—Å–ª–æ –±–æ–ª—å—à–µ –∏–ª–∏ –º–µ–Ω—å—à–µ –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–≥–æ.
- –ü–æ—Å–ª–µ 5 –ø–æ–ø—ã—Ç–æ–∫ –±—É–¥–µ—Ç –¥–∞–Ω–∞ –ø–æ–¥—Å–∫–∞–∑–∫–∞ —Å –¥–∏–∞–ø–∞–∑–æ–Ω–æ–º.
- –í–≤–µ–¥–∏—Ç–µ '–≤—ã—Ö–æ–¥' –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ –∏–≥—Ä—ã –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç.
""")

def get_valid_input(prompt, min_val, max_val):
    while True:
        user_input = input(prompt).strip()
        if user_input.lower() in ['–≤—ã—Ö–æ–¥', 'exit']:
            print("–í—ã—Ö–æ–¥ –∏–∑ –∏–≥—Ä—ã...")
            exit()
        if user_input.isdigit():
            num = int(user_input)
            if min_val <= num <= max_val:
                return num
            else:
                print(f"–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç {min_val} –¥–æ {max_val}.")
        else:
            print("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ.")

def play_game():
    print("\n–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏:")
    for k, v in levels.items():
        print(f"{k} - {v['name']} (–æ—Ç {v['min']} –¥–æ {v['max']}, –ø–æ–ø—ã—Ç–æ–∫: {v['attempts']})")
    level_choice = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —É—Ä–æ–≤–Ω—è: ").strip()
    while level_choice not in levels:
        level_choice = input("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –í–≤–µ–¥–∏—Ç–µ 1, 2 –∏–ª–∏ 3: ").strip()
    level = levels[level_choice]
    target = random.randint(level['min'], level['max'])
    attempts = 0
    guessed = False
    start_time = time.time()
    print(f"\n–Ø –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ –æ—Ç {level['min']} –¥–æ {level['max']}. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É–≥–∞–¥–∞—Ç—å!")

    while attempts < level['attempts']:
        guess = get_valid_input(f"–ü–æ–ø—ã—Ç–∫–∞ {attempts + 1}: ", level['min'], level['max'])
        attempts += 1
        if guess == target:
            guessed = True
            print("–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã —É–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ!")
            break
        elif guess < target:
            print("–°–ª–∏—à–∫–æ–º –º–∞–ª–µ–Ω—å–∫–æ–µ.")
        else:
            print("–°–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ.")
        if attempts == 5 and not guessed:
            hint_range = 10 if level['max'] <= 100 else 50
            low = max(target - hint_range, level['min'])
            high = min(target + hint_range, level['max'])
            print(f"–ü–æ–¥—Å–∫–∞–∑–∫–∞: —á–∏—Å–ª–æ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ {low} - {high}")

    if not guessed:
        print(f"–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏! –ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –±—ã–ª–æ: {target}")
    duration = round(time.time() - start_time, 2)
    stats = {"—É—Ä–æ–≤–µ–Ω—å": level['name'], "—É—Å–ø–µ—Ö": guessed, "–ø–æ–ø—ã—Ç–æ–∫": attempts, "–≤—Ä–µ–º—è_—Å–µ–∫": duration}
    save_stats(stats)

def main_menu():
    while True:
        print("""
==== –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ====
1. –ù–∞—á–∞—Ç—å –∏–≥—Ä—É
2. –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
3. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
4. –í—ã—Ö–æ–¥
""")
        choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1-4): ").strip()
        if choice == '1':
            play_game()
        elif choice == '2':
            instructions()
        elif choice == '3':
            load_stats()
        elif choice == '4':
            print("–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É! –ü–æ–∫–∞!")
            break
        else:
            print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

if __name__ == "__main__":
    main_menu()
